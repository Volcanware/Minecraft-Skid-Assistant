package com.alan.clients.module.impl.exploit.disabler;

import com.alan.clients.module.impl.combat.KillAura;
import com.alan.clients.module.impl.exploit.Disabler;
import com.alan.clients.newevent.Listener;
import com.alan.clients.newevent.annotations.EventLink;
import com.alan.clients.newevent.impl.motion.JumpEvent;
import com.alan.clients.newevent.impl.motion.PreMotionEvent;
import com.alan.clients.value.impl.BooleanValue;
import com.alan.clients.value.Mode;
import com.alan.clients.util.packet.PacketUtil;
import com.alan.clients.util.player.MoveUtil;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0BPacketEntityAction;

public class VulcanDisabler extends Mode<Disabler> {

    private final BooleanValue sprint = new BooleanValue("Omni-Sprint", this, true);
    private final BooleanValue scaffold = new BooleanValue("Scaffold", this, true);

    public VulcanDisabler(String name, Disabler parent) {
        super(name, parent);
    }


    @EventLink()
    public final Listener<PreMotionEvent> onPreMotionEvent = event -> {

        if (sprint.getValue() && ((!mc.gameSettings.keyBindForward.isKeyDown() && MoveUtil.isMoving()) || getModule(KillAura.class).isEnabled()) && event.isOnGround()) {
            event.setOnGround(mc.thePlayer.onGroundTicks % 2 == 0);
        }

        if (scaffold.getValue()) {
            if (!mc.thePlayer.isSwingInProgress) {
                if (mc.thePlayer.ticksExisted % 20 == 0) {
                    PacketUtil.send(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING));
                } else if (mc.thePlayer.ticksExisted % 10 == 0) {
                    PacketUtil.send(new C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SNEAKING));
                }
            }
        }
    };

    @EventLink()
    public final Listener<JumpEvent> onJump = event -> {
        if (sprint.getValue() && ((!mc.gameSettings.keyBindForward.isKeyDown() && MoveUtil.isMoving()) || getModule(KillAura.class).isEnabled())) {
            PacketUtil.sendNoEvent(new C03PacketPlayer(true));
        }
    };
}
package com.alan.clients.module.impl.exploit.disabler;

import com.alan.clients.module.impl.exploit.Disabler;
import com.alan.clients.newevent.Listener;
import com.alan.clients.newevent.annotations.EventLink;
import com.alan.clients.newevent.impl.input.MoveInputEvent;
import com.alan.clients.newevent.impl.motion.PreMotionEvent;
import com.alan.clients.newevent.impl.other.TeleportEvent;
import com.alan.clients.value.Mode;
import com.alan.clients.util.player.MoveUtil;

public class MineLandKickDisabler extends Mode<Disabler> {

    boolean enabled;

    public MineLandKickDisabler(String name, Disabler parent) {
        super(name, parent);
    }

    @EventLink()
    public final Listener<PreMotionEvent> onPreMotionEvent = event -> {

        if (mc.thePlayer.ticksExisted > 20 && mc.thePlayer.ticksExisted <= 40 && mc.thePlayer.onGround) {
            this.enabled = true;
        } else if (mc.thePlayer.ticksExisted == 100) {
            this.enabled = false;
        }

        if (this.enabled) {
            event.setOnGround(true);
            event.setPosX(mc.thePlayer.posX - 0.1 * (mc.thePlayer.ticksExisted % 2 == 0 ? 1 : -1));
            event.setPosZ(mc.thePlayer.posZ - 0.1 * (mc.thePlayer.ticksExisted % 2 == 0 ? 1 : -1));
            event.setPosY(MoveUtil.roundToGround(mc.thePlayer.posY + 1));
        }
    };

    @EventLink()
    public final Listener<TeleportEvent> onTeleport = event -> {
        this.enabled = false;
    };


    @EventLink()
    public final Listener<MoveInputEvent> onMove = event -> {
        if (this.enabled) {
            event.setForward(0);
            event.setStrafe(0);
            event.setJump(false);
        }
    };
}